class Player
instance variables

			-- identifier of the player
			private numberID : [nat1];
			-- coordinates of the player's current location
			private position: [Point];
			-- remaining walls that the player can still placed in the map
			private walls : [nat] := 10;
			-- row that the player aims to reach in order to complete the objective
			private targetRow : [nat1];
			private targetCol : [nat1];
			
operations

			-- constructor
			public Player: nat ==> Player
			Player(id) ==
			(
				if id = 1
				then (
					position := new Point(1,9);
					targetRow := 17;
					targetCol := nil;
					numberID := id;
				)
				else if id = 2
				then (
					position := new Point(17,9);
					targetRow := 1;
					targetCol := nil;
					numberID := id;
				)
				else if id = 3
				then (
					position := new Point(9,1);
					targetCol := 17;
					targetRow := nil;
					numberID := id;
				)
				else if id = 4
				then (
					position := new Point(9,17);
					targetCol := 1;
					targetRow := nil;
					numberID := id;
				);
			)
			pre id > 0 and id < 5
			post position <> nil and (targetRow <> nil or targetCol <> nil) and numberID <> nil and walls = 10;
			
			-- getting the current position of the player
			public pure getPosition : () ==> Point 
			getPosition() == return position;
			
			-- editing the position of the player
			public setPosition: nat1 * nat1 ==> ()
			setPosition(new_x, new_y) ==
				position := new Point(new_x, new_y)
			post position <> nil;

			-- get the player id
			public pure getPlayerID : () ==> nat1
			getPlayerID() ==
				return numberID
			pre numberID <> nil;
			
			-- retrieves the index of the row the player has to reach
			public pure getTargetRow : () ==> [nat1]
			getTargetRow() == return self.targetRow;
			
			public pure getTargetCol : () ==> [nat1]
			getTargetCol() == return self.targetCol;

end Player