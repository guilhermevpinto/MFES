class Board
types
	public Wall = <TRUE> | <NOWALL>;
	public Position = seq of nat1;
	public Slot = nat1 | <WALL> | <NOWALL>;
values
-- TODO Define values here
instance variables
	public static board : seq of seq of Slot := [];
operations
	public Board : () ==> Board
	Board() == 
	(
		board := 
		[
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9]
		];
	);
	
	public reset : () ==> ()
	reset() == 
	(
		board := 
		[
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9],
			[<NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>, <NOWALL>],
			[1, <NOWALL>, 2, <NOWALL>, 3, <NOWALL>, 4, <NOWALL>, 5, <NOWALL>, 6, <NOWALL>, 7, <NOWALL>, 8, <NOWALL>, 9]
		];
	);
	
	public addWall : nat1 * nat1 ==> ()
	addWall(row, col) == 
	(
		if row mod 2 = 1
			then 
			(
				if board(row)(col) = <NOWALL> and board(row+2)(col) = <NOWALL>
					then
					(
						board(row) := board(row) ++ {col |-> <WALL>};
						board(row+2) := board(row+2) ++ {col |-> <WALL>};
					)
				
			)	
	);
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Board